language: java

sudo: false
dist: trusty

addons:
  apt:
    packages:
    - graphviz # required for testing the DOT provider

cache:
  directories:
  - $HOME/.m2
  - $HOME/ltsmin

before_cache:
  # do not cache our local archives
  - rm -rf $HOME/.m2/repository/net/automatalib/

branches:
  only:
  - master
  - develop
  - release

env:
  global:
    - LTSMIN_VERSION="v3.1.0"

install:
  # install LTSmin
  - ${TRAVIS_BUILD_DIR}/build-tools/install-ltsmin.sh
  - PATH="$PATH:$HOME/ltsmin/$LTSMIN_VERSION/bin"
  # override any "sane" defaults of Travis VMs
  - mkdir -p ${HOME}/.m2
  - cp ${TRAVIS_BUILD_DIR}/build-tools/travis-settings.xml ${HOME}/.m2/settings.xml

script: mvn install -B

jobs:
  fast_finish: true
  include:
    # Run code analysis and documentation generation only in our core environments (since it's an expensive task)
    - jdk: openjdk8
      script: mvn install -B -Pcode-analysis,bundles
    - jdk: openjdk11
      script: mvn install -B -Pcode-analysis,bundles
    # Run "normal" tests in other environments
    - stage: Integration Tests
      jdk: openjdk11
      env: MAVEN_OPTS="$MAVEN_OPTS -Dmaven.compiler.source=11 -Dmaven.compiler.target=11"
    - os: osx
      jdk: openjdk8
      # Force old xcode version so JDK8 isn't overridden from newer xcode version
      osx_image: xcode9.3
    - os: osx
      jdk: openjdk11
#    - os: windows
#      jdk: oraclejdk8
#      language: shell
#      before_install:
#      - cinst jdk8 -params 'installdir=C:\\jdk8'
#      - export JAVA_HOME="C:\jdk8"
#      - export PATH=${JAVA_HOME}/bin:${PATH}
#      - cinst maven -params 'installdir=C:\\maven'
#    - os: windows
#      jdk: oraclejdk11
#      language: shell
#      before_install:
#      - cinst jdk11 -params 'installdir=C:\\jdk11'
#      - export JAVA_HOME="C:\jdk11"
#      - export PATH=${JAVA_HOME}/bin:${PATH}
#      - cinst maven -params 'installdir=C:\\maven'
    # Run coverage in default environment
    - stage: Coverage
      jdk: openjdk8
      script:
        - mvn install -B -Pcode-coverage
        - mvn coveralls:report
      # Run deployment in default environment
    - stage: Deploy
      jdk: openjdk8
      # skip regular build and define deployment in deploy phase, which is skipped for pull-requests
      script: skip
      deploy:
        provider: script
        script: mvn -B -DskipTests=true deploy
        on:
          branch: develop # only auto deploy snapshots
